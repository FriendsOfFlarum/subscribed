{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@fof/subscribed/webpack/bootstrap","webpack://@fof/subscribed/webpack/runtime/compat get default export","webpack://@fof/subscribed/webpack/runtime/define property getters","webpack://@fof/subscribed/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/subscribed/webpack/runtime/make namespace object","webpack://@fof/subscribed/external root \"flarum.core.compat['forum/app']\"","webpack://@fof/subscribed/external root \"flarum.core.compat['common/extend']\"","webpack://@fof/subscribed/external root \"flarum.core.compat['forum/components/NotificationGrid']\"","webpack://@fof/subscribed/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/subscribed/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/subscribed/external root \"flarum.core.compat['forum/components/Notification']\"","webpack://@fof/subscribed/./src/forum/notifications/DiscussionCreatedNotification.js","webpack://@fof/subscribed/external root \"flarum.core.compat['common/utils/string']\"","webpack://@fof/subscribed/./src/forum/notifications/PostCreatedNotification.js","webpack://@fof/subscribed/./src/forum/notifications/UserCreatedNotification.js","webpack://@fof/subscribed/./src/forum/notifications/PostUnapprovedNotification.js","webpack://@fof/subscribed/external root \"flarum.core.compat['common/models/User']\"","webpack://@fof/subscribed/external root \"flarum.core.compat['common/Model']\"","webpack://@fof/subscribed/./src/forum/notifications/PostFlaggedNotification.js","webpack://@fof/subscribed/./src/forum/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/NotificationGrid'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/Notification'];","import app from 'flarum/forum/app';\nimport Notification from 'flarum/forum/components/Notification';\n\nexport default class DiscussionCreatedNotification extends Notification {\n  icon() {\n    // Same as create discussion button on purpose.\n    return 'fas fa-edit';\n  }\n\n  href() {\n    const notification = this.attrs.notification;\n\n    return app.route.discussion(notification.subject());\n  }\n\n  content() {\n    return app.translator.trans('fof-subscribed.forum.notifications.discussion_created_text', { user: this.attrs.notification.fromUser() });\n  }\n\n  excerpt() {\n    return null;\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/string'];","import app from 'flarum/forum/app';\nimport Notification from 'flarum/forum/components/Notification';\nimport { truncate } from 'flarum/common/utils/string';\n\nexport default class PostCreatedNotification extends Notification {\n  icon() {\n    return 'fas fa-edit';\n  }\n\n  href() {\n    const notification = this.attrs.notification;\n    const post = notification.subject();\n\n    return app.route.discussion(post.discussion(), post.postNumber);\n  }\n\n  content() {\n    return app.translator.trans('fof-subscribed.forum.notifications.post_created_text', { user: this.attrs.notification.fromUser() });\n  }\n\n  excerpt() {\n    return truncate(this.attrs.notification.subject().contentPlain(), 200);\n  }\n}\n","import app from 'flarum/forum/app';\nimport Notification from 'flarum/forum/components/Notification';\n\nexport default class UserCreatedNotification extends Notification {\n  icon() {\n    return 'fas fa-user-plus';\n  }\n\n  href() {\n    const notification = this.attrs.notification;\n\n    return app.route.user(notification.subject());\n  }\n\n  content() {\n    return app.translator.trans('fof-subscribed.forum.notifications.user_created_text', { user: this.attrs.notification.fromUser() });\n  }\n\n  excerpt() {\n    return null;\n  }\n}\n","import app from 'flarum/forum/app';\nimport Notification from 'flarum/forum/components/Notification';\nimport { truncate } from 'flarum/common/utils/string';\n\nexport default class PostUnapprovedNotification extends Notification {\n  icon() {\n    return 'fas fa-gavel';\n  }\n\n  href() {\n    const notification = this.attrs.notification;\n    const post = notification.subject();\n\n    return app.route.discussion(post.discussion(), post.number());\n  }\n\n  content() {\n    return app.translator.trans('fof-subscribed.forum.notifications.post_unapproved_text', { user: this.attrs.notification.fromUser() });\n  }\n\n  excerpt() {\n    return truncate(this.attrs.notification.subject().contentPlain(), 200);\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/User'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","import app from 'flarum/forum/app';\nimport Notification from 'flarum/forum/components/Notification';\nimport { truncate } from 'flarum/common/utils/string';\n\nexport default class PostFlaggedNotification extends Notification {\n  icon() {\n    return 'fas fa-flag';\n  }\n\n  href() {\n    const notification = this.attrs.notification;\n    const post = notification.subject();\n\n    return app.route.discussion(post.discussion(), post.postNumber);\n  }\n\n  content() {\n    return app.translator.trans('fof-subscribed.forum.notifications.post_flagged_text', { user: this.attrs.notification.fromUser() });\n  }\n\n  excerpt() {\n    return truncate(this.attrs.notification.subject().contentPlain(), 200);\n  }\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport NotificationGrid from 'flarum/forum/components/NotificationGrid';\n\nimport DiscussionCreatedNotification from './notifications/DiscussionCreatedNotification';\nimport PostCreatedNotification from './notifications/PostCreatedNotification';\nimport UserCreatedNotification from './notifications/UserCreatedNotification';\nimport PostUnapprovedNotification from './notifications/PostUnapprovedNotification';\nimport User from 'flarum/common/models/User';\nimport Model from 'flarum/common/Model';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport PostFlaggedNotification from './notifications/PostFlaggedNotification';\n\napp.initializers.add('fof-subscribed', () => {\n  app.notificationComponents.discussionCreated = DiscussionCreatedNotification;\n  app.notificationComponents.postCreated = PostCreatedNotification;\n  app.notificationComponents.userCreated = UserCreatedNotification;\n  app.notificationComponents.postUnapproved = PostUnapprovedNotification;\n  app.notificationComponents.postFlagged = PostFlaggedNotification;\n\n  User.prototype.canSubscribeDiscussionCreated = Model.attribute('canSubscribeDiscussionCreated');\n  User.prototype.canSubscribePostCreated = Model.attribute('canSubscribePostCreated');\n  User.prototype.canSubscribePostUnapproved = Model.attribute('canSubscribePostUnapproved');\n  User.prototype.canSubscribeUserCreated = Model.attribute('canSubscribeUserCreated');\n  User.prototype.canSubscribePostFlagged = Model.attribute('canSubscribePostFlagged');\n\n  extend(NotificationGrid.prototype, 'notificationTypes', (items: ItemList) => {\n    const currentUser = app.session?.user;\n\n    if (currentUser?.canSubscribeDiscussionCreated()) {\n      items.add(\n        'discussionCreated',\n        {\n          name: 'discussionCreated',\n          icon: 'fas fa-pencil-alt',\n          label: app.translator.trans('fof-subscribed.forum.settings.notify_discussion_created_label'),\n        },\n        5\n      );\n    }\n\n    if (currentUser?.canSubscribePostCreated()) {\n      items.add(\n        'postCreated',\n        {\n          name: 'postCreated',\n          icon: 'fas fa-pencil-alt',\n          label: app.translator.trans('fof-subscribed.forum.settings.notify_post_created_label'),\n        },\n        4\n      );\n    }\n\n    if (currentUser?.canSubscribePostUnapproved()) {\n      items.add(\n        'postUnapproved',\n        {\n          name: 'postUnapproved',\n          icon: 'fas fa-check',\n          label: app.translator.trans('fof-subscribed.forum.settings.notify_post_unapproved_label'),\n        },\n        -10\n      );\n    }\n\n    if (currentUser?.canSubscribeUserCreated()) {\n      items.add(\n        'userCreated',\n        {\n          name: 'userCreated',\n          icon: 'fas fa-user-plus',\n          label: app.translator.trans('fof-subscribed.forum.settings.notify_user_created_label'),\n        },\n        -10\n      );\n    }\n\n    if (currentUser?.canSubscribePostFlagged()) {\n      items.add(\n        'postFlagged',\n        {\n          name: 'postFlagged',\n          icon: 'fas fa-flag',\n          label: app.translator.trans('fof-subscribed.forum.settings.notify_post_flagged_label'),\n        },\n        -10\n      );\n    }\n  });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","create","constructor","DiscussionCreatedNotification","_Notification","apply","arguments","_proto","icon","href","notification","this","attrs","app","discussion","subject","content","trans","user","fromUser","excerpt","Notification","PostCreatedNotification","post","postNumber","truncate","contentPlain","UserCreatedNotification","PostUnapprovedNotification","number","PostFlaggedNotification","add","discussionCreated","postCreated","userCreated","postUnapproved","postFlagged","User","canSubscribeDiscussionCreated","Model","canSubscribePostCreated","canSubscribePostUnapproved","canSubscribeUserCreated","canSubscribePostFlagged","extend","NotificationGrid","items","_app$session","currentUser","name","label"],"sourceRoot":""}