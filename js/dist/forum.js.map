{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3ER,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,M,+BCLvD,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,qC,aCAzC,SAASC,EAAgBhB,EAAGiB,GAMzC,OALAD,EAAkBf,OAAOiB,gBAAkB,SAAyBlB,EAAGiB,GAErE,OADAjB,EAAEmB,UAAYF,EACPjB,GAGFgB,EAAgBhB,EAAGiB,GCLb,SAASG,EAAeC,EAAUC,GAC/CD,EAASd,UAAYN,OAAOsB,OAAOD,EAAWf,WAC9Cc,EAASd,UAAUiB,YAAcH,EACjCH,EAAeG,EAAUC,GCJ3B,MAAM,EAA+BT,OAAOC,KAAKC,OAAO,iC,aCGnCU,EAAAA,SAAAA,G,oFACnBC,KAAA,WAEE,MAAO,e,EAGTC,KAAA,WACE,IAAMC,EAAeC,KAAKC,MAAMF,aAEhC,OAAOG,IAAAA,MAAAA,WAAqBH,EAAaI,Y,EAG3CC,QAAA,WACE,OAAOF,IAAAA,WAAAA,MAAqB,6DAA8D,CAAEG,KAAML,KAAKC,MAAMF,aAAaO,c,EAbzGV,CAAsCW,KCH3D,MAAM,EAA+BvB,OAAOC,KAAKC,OAAO,uB,ICInCsB,EAAAA,SAAAA,G,oFACnBX,KAAA,WACE,MAAO,e,EAGTC,KAAA,WACE,IACMW,EADeT,KAAKC,MAAMF,aACNI,UAE1B,OAAOD,IAAAA,MAAAA,WAAqBO,EAAKC,aAAcD,EAAKE,a,EAGtDP,QAAA,WACE,OAAOF,IAAAA,WAAAA,MAAqB,uDAAwD,CAAEG,KAAML,KAAKC,MAAMF,aAAaO,c,EAGtHM,QAAA,WACE,OAAOC,EAAAA,EAAAA,UAASb,KAAKC,MAAMF,aAAaI,UAAUW,eAAgB,M,EAjBjDN,CAAgCD,KCDhCQ,EAAAA,SAAAA,G,oFACnBlB,KAAA,WACE,MAAO,oB,EAGTC,KAAA,WACE,IAAMC,EAAeC,KAAKC,MAAMF,aAEhC,OAAOG,IAAAA,MAAAA,KAAeH,EAAaI,Y,EAGrCC,QAAA,WACE,OAAOF,IAAAA,WAAAA,MAAqB,uDAAwD,CAAEG,KAAML,KAAKC,MAAMF,aAAaO,c,EAZnGS,CAAgCR,KCChCS,EAAAA,SAAAA,G,oFACnBnB,KAAA,WACE,MAAO,gB,EAGTC,KAAA,WACE,IACMW,EADeT,KAAKC,MAAMF,aACNI,UAE1B,OAAOD,IAAAA,MAAAA,WAAqBO,EAAKC,aAAcD,EAAKQ,W,EAGtDb,QAAA,WACE,OAAOF,IAAAA,WAAAA,MAAqB,0DAA2D,CAAEG,KAAML,KAAKC,MAAMF,aAAaO,c,EAGzHM,QAAA,WACE,OAAOC,EAAAA,EAAAA,UAASb,KAAKC,MAAMF,aAAaI,UAAUW,eAAgB,M,EAjBjDE,CAAmCT,KCJxD,MAAM,EAA+BvB,OAAOC,KAAKC,OAAO,sB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,gB,aCYxDgB,IAAAA,aAAAA,IAAqB,kBAAkB,WACrCA,IAAAA,uBAAAA,kBAA+CN,EAC/CM,IAAAA,uBAAAA,YAAyCM,EACzCN,IAAAA,uBAAAA,YAAyCa,EACzCb,IAAAA,uBAAAA,eAA4Cc,EAE5CE,IAAAA,UAAAA,8BAA+CC,IAAAA,UAAgB,iCAC/DD,IAAAA,UAAAA,wBAAyCC,IAAAA,UAAgB,2BACzDD,IAAAA,UAAAA,2BAA4CC,IAAAA,UAAgB,8BAC5DD,IAAAA,UAAAA,wBAAyCC,IAAAA,UAAgB,4BAEzDC,EAAAA,EAAAA,QAAOC,IAAAA,UAA4B,qBAAqB,SAACC,GAAoB,MACrEC,EAAW,SAAGrB,IAAAA,cAAH,EAAG,EAAaG,KAEjC,MAAIkB,GAAAA,EAAaC,iCACfF,EAAMG,IACJ,oBACA,CACEC,KAAM,oBACN7B,KAAM,oBACN8B,MAAOzB,IAAAA,WAAAA,MAAqB,kEAE9B,GAIJ,MAAIqB,GAAAA,EAAaK,2BACfN,EAAMG,IACJ,cACA,CACEC,KAAM,cACN7B,KAAM,oBACN8B,MAAOzB,IAAAA,WAAAA,MAAqB,4DAE9B,GAIJ,MAAIqB,GAAAA,EAAaM,8BACfP,EAAMG,IACJ,iBACA,CACEC,KAAM,iBACN7B,KAAM,eACN8B,MAAOzB,IAAAA,WAAAA,MAAqB,gEAE7B,IAIL,MAAIqB,GAAAA,EAAaO,2BACfR,EAAMG,IACJ,cACA,CACEC,KAAM,cACN7B,KAAM,mBACN8B,MAAOzB,IAAAA,WAAAA,MAAqB,6DAE7B,W","sources":["webpack://@fof/subscribed/webpack/bootstrap","webpack://@fof/subscribed/webpack/runtime/compat get default export","webpack://@fof/subscribed/webpack/runtime/define property getters","webpack://@fof/subscribed/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/subscribed/webpack/runtime/make namespace object","webpack://@fof/subscribed/external root \"flarum.core.compat['forum/app']\"","webpack://@fof/subscribed/external root \"flarum.core.compat['common/extend']\"","webpack://@fof/subscribed/external root \"flarum.core.compat['forum/components/NotificationGrid']\"","webpack://@fof/subscribed/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/subscribed/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/subscribed/external root \"flarum.core.compat['forum/components/Notification']\"","webpack://@fof/subscribed/./src/forum/notifications/DiscussionCreatedNotification.js","webpack://@fof/subscribed/external root \"flarum.core.compat['common/utils/string']\"","webpack://@fof/subscribed/./src/forum/notifications/PostCreatedNotification.js","webpack://@fof/subscribed/./src/forum/notifications/UserCreatedNotification.js","webpack://@fof/subscribed/./src/forum/notifications/PostUnapprovedNotification.js","webpack://@fof/subscribed/external root \"flarum.core.compat['common/models/User']\"","webpack://@fof/subscribed/external root \"flarum.core.compat['common/Model']\"","webpack://@fof/subscribed/./src/forum/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/NotificationGrid'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/Notification'];","import app from 'flarum/forum/app';\nimport Notification from 'flarum/forum/components/Notification';\n\nexport default class DiscussionCreatedNotification extends Notification {\n  icon() {\n    // Same as create discussion button on purpose.\n    return 'fas fa-edit';\n  }\n\n  href() {\n    const notification = this.attrs.notification;\n\n    return app.route.discussion(notification.subject());\n  }\n\n  content() {\n    return app.translator.trans('fof-subscribed.forum.notifications.discussion_created_text', { user: this.attrs.notification.fromUser() });\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/string'];","import app from 'flarum/forum/app';\nimport Notification from 'flarum/forum/components/Notification';\nimport { truncate } from 'flarum/common/utils/string';\n\nexport default class PostCreatedNotification extends Notification {\n  icon() {\n    return 'fas fa-edit';\n  }\n\n  href() {\n    const notification = this.attrs.notification;\n    const post = notification.subject();\n\n    return app.route.discussion(post.discussion(), post.postNumber);\n  }\n\n  content() {\n    return app.translator.trans('fof-subscribed.forum.notifications.post_created_text', { user: this.attrs.notification.fromUser() });\n  }\n\n  excerpt() {\n    return truncate(this.attrs.notification.subject().contentPlain(), 200);\n  }\n}\n","import app from 'flarum/forum/app';\nimport Notification from 'flarum/forum/components/Notification';\n\nexport default class UserCreatedNotification extends Notification {\n  icon() {\n    return 'fas fa-user-plus';\n  }\n\n  href() {\n    const notification = this.attrs.notification;\n\n    return app.route.user(notification.subject());\n  }\n\n  content() {\n    return app.translator.trans('fof-subscribed.forum.notifications.user_created_text', { user: this.attrs.notification.fromUser() });\n  }\n}\n","import app from 'flarum/forum/app';\nimport Notification from 'flarum/forum/components/Notification';\nimport { truncate } from 'flarum/common/utils/string';\n\nexport default class PostUnapprovedNotification extends Notification {\n  icon() {\n    return 'fas fa-gavel';\n  }\n\n  href() {\n    const notification = this.attrs.notification;\n    const post = notification.subject();\n\n    return app.route.discussion(post.discussion(), post.number());\n  }\n\n  content() {\n    return app.translator.trans('fof-subscribed.forum.notifications.post_unapproved_text', { user: this.attrs.notification.fromUser() });\n  }\n\n  excerpt() {\n    return truncate(this.attrs.notification.subject().contentPlain(), 200);\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/User'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport NotificationGrid from 'flarum/forum/components/NotificationGrid';\n\nimport DiscussionCreatedNotification from './notifications/DiscussionCreatedNotification';\nimport PostCreatedNotification from './notifications/PostCreatedNotification';\nimport UserCreatedNotification from './notifications/UserCreatedNotification';\nimport PostUnapprovedNotification from './notifications/PostUnapprovedNotification';\nimport User from 'flarum/common/models/User';\nimport Model from 'flarum/common/Model';\nimport ItemList from 'flarum/common/utils/ItemList';\n\napp.initializers.add('fof-subscribed', () => {\n  app.notificationComponents.discussionCreated = DiscussionCreatedNotification;\n  app.notificationComponents.postCreated = PostCreatedNotification;\n  app.notificationComponents.userCreated = UserCreatedNotification;\n  app.notificationComponents.postUnapproved = PostUnapprovedNotification;\n\n  User.prototype.canSubscribeDiscussionCreated = Model.attribute('canSubscribeDiscussionCreated');\n  User.prototype.canSubscribePostCreated = Model.attribute('canSubscribePostCreated');\n  User.prototype.canSubscribePostUnapproved = Model.attribute('canSubscribePostUnapproved');\n  User.prototype.canSubscribeUserCreated = Model.attribute('canSubscribeUserCreated');\n\n  extend(NotificationGrid.prototype, 'notificationTypes', (items: ItemList) => {\n    const currentUser = app.session?.user;\n\n    if (currentUser?.canSubscribeDiscussionCreated()) {\n      items.add(\n        'discussionCreated',\n        {\n          name: 'discussionCreated',\n          icon: 'fas fa-pencil-alt',\n          label: app.translator.trans('fof-subscribed.forum.settings.notify_discussion_created_label'),\n        },\n        5\n      );\n    }\n\n    if (currentUser?.canSubscribePostCreated()) {\n      items.add(\n        'postCreated',\n        {\n          name: 'postCreated',\n          icon: 'fas fa-pencil-alt',\n          label: app.translator.trans('fof-subscribed.forum.settings.notify_post_created_label'),\n        },\n        4\n      );\n    }\n\n    if (currentUser?.canSubscribePostUnapproved()) {\n      items.add(\n        'postUnapproved',\n        {\n          name: 'postUnapproved',\n          icon: 'fas fa-check',\n          label: app.translator.trans('fof-subscribed.forum.settings.notify_post_unapproved_label'),\n        },\n        -10\n      );\n    }\n\n    if (currentUser?.canSubscribeUserCreated()) {\n      items.add(\n        'userCreated',\n        {\n          name: 'userCreated',\n          icon: 'fas fa-user-plus',\n          label: app.translator.trans('fof-subscribed.forum.settings.notify_user_created_label'),\n        },\n        -10\n      );\n    }\n  });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","create","constructor","DiscussionCreatedNotification","icon","href","notification","this","attrs","app","subject","content","user","fromUser","Notification","PostCreatedNotification","post","discussion","postNumber","excerpt","truncate","contentPlain","UserCreatedNotification","PostUnapprovedNotification","number","User","Model","extend","NotificationGrid","items","currentUser","canSubscribeDiscussionCreated","add","name","label","canSubscribePostCreated","canSubscribePostUnapproved","canSubscribeUserCreated"],"sourceRoot":""}